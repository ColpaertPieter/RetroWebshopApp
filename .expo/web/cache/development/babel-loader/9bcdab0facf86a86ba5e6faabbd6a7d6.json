{"ast":null,"code":"import KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useRef } from \"react\";\nimport { Button, Input } from \"react-native-elements\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().required(\"Voor- en achternaam zijn verplicht\"),\n  email: Yup.string().email(\"Geen geldig emailadres\").required(\"Email is verplicht\"),\n  street: Yup.string().required(\"Straat is verplicht\"),\n  houseNumber: Yup.string().required(\"Huisnummer is verplicht\"),\n  zipCode: Yup.number(\"Postcode kan enkel cijfer bevatten\").required(\"Postcode is verplicht\"),\n  city: Yup.string().required(\"Gemeente is verplicht\")\n});\n\nvar ConfirmScreen = function ConfirmScreen() {\n  var _formik$errors, _formik$errors2, _formik$errors3, _formik$errors4, _formik$errors5, _formik$errors6;\n\n  var navigation = useNavigation();\n  var emailRef = useRef(null);\n  var streetRef = useRef(null);\n  var houseNumberRef = useRef(null);\n  var zipCodeRef = useRef(null);\n  var cityRef = useRef(null);\n  var formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      street: \"\",\n      houseNumber: \"\",\n      zipCode: \"\",\n      city: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    }\n  });\n\n  var makeOrder = function makeOrder() {};\n\n  return _jsx(KeyboardAvoidingView, {\n    keyboardVerticalOffset: 200,\n    style: styles.container,\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    children: _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      children: _jsxs(View, {\n        style: styles.inputView,\n        children: [_jsx(Input, {\n          style: styles.input,\n          placeholder: \"Naam\",\n          value: formik.values.name,\n          onChangeText: formik.handleChange(\"name\"),\n          errorMessage: (_formik$errors = formik.errors) == null ? void 0 : _formik$errors.name,\n          onSubmitEditing: function onSubmitEditing() {\n            return emailRef.current.focus();\n          },\n          returnKeyType: \"next\",\n          inputContainerStyle: {\n            borderWidth: 0,\n            borderColor: \"transparent\"\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          ref: emailRef,\n          placeholder: \"Email\",\n          value: formik.values.email,\n          onChangeText: formik.handleChange(\"email\"),\n          errorMessage: (_formik$errors2 = formik.errors) == null ? void 0 : _formik$errors2.email,\n          onSubmitEditing: function onSubmitEditing() {\n            return streetRef.current.focus();\n          },\n          returnKeyType: \"next\",\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          inputContainerStyle: {\n            borderWidth: 0,\n            borderColor: \"transparent\"\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          ref: streetRef,\n          placeholder: \"Straat\",\n          value: formik.values.street,\n          onChangeText: formik.handleChange(\"street\"),\n          errorMessage: (_formik$errors3 = formik.errors) == null ? void 0 : _formik$errors3.street,\n          onSubmitEditing: function onSubmitEditing() {\n            return houseNumberRef.current.focus();\n          },\n          returnKeyType: \"next\",\n          inputContainerStyle: {\n            borderWidth: 0,\n            borderColor: \"transparent\"\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          ref: houseNumberRef,\n          placeholder: \"Huisnummer\",\n          value: formik.values.houseNumber,\n          onChangeText: formik.handleChange(\"houseNumber\"),\n          errorMessage: (_formik$errors4 = formik.errors) == null ? void 0 : _formik$errors4.houseNumber,\n          onSubmitEditing: function onSubmitEditing() {\n            return zipCodeRef.current.focus();\n          },\n          returnKeyType: \"next\",\n          inputContainerStyle: {\n            borderWidth: 0,\n            borderColor: \"transparent\"\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          ref: zipCodeRef,\n          placeholder: \"Postcode\",\n          value: formik.values.zipCode,\n          onChangeText: formik.handleChange(\"zipCode\"),\n          errorMessage: (_formik$errors5 = formik.errors) == null ? void 0 : _formik$errors5.zipCode,\n          onSubmitEditing: function onSubmitEditing() {\n            return cityRef.current.focus();\n          },\n          returnKeyType: \"next\",\n          keyboardType: \"number-pad\",\n          inputContainerStyle: {\n            borderWidth: 0,\n            borderColor: \"transparent\"\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          ref: cityRef,\n          placeholder: \"Gemeente\",\n          value: formik.values.city,\n          onChangeText: formik.handleChange(\"city\"),\n          errorMessage: (_formik$errors6 = formik.errors) == null ? void 0 : _formik$errors6.city,\n          inputContainerStyle: {\n            borderWidth: 0,\n            borderColor: \"transparent\"\n          }\n        }), _jsx(Button, {\n          buttonStyle: styles.button,\n          title: \"Bevestigen\",\n          onPress: formik.handleSubmit\n        })]\n      })\n    })\n  });\n};\n\nexport default ConfirmScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  inputView: {\n    justifyContent: \"space-around\"\n  },\n  input: {\n    height: 40,\n    padding: 10,\n    borderWidth: 1,\n    marginTop: 10\n  },\n  button: {\n    backgroundColor: \"green\"\n  }\n});","map":{"version":3,"names":["React","useRef","Button","Input","useFormik","Yup","useNavigation","validationSchema","object","shape","name","string","required","email","street","houseNumber","zipCode","number","city","ConfirmScreen","navigation","emailRef","streetRef","houseNumberRef","zipCodeRef","cityRef","formik","initialValues","onSubmit","values","console","log","makeOrder","styles","container","Platform","OS","Keyboard","dismiss","inputView","input","handleChange","errors","current","focus","borderWidth","borderColor","button","handleSubmit","StyleSheet","create","flex","justifyContent","height","padding","marginTop","backgroundColor"],"sources":["C:/Users/Piete/Documents/Hogent/Tweedejaar/Semester2/Mobile/Projecten/RetroWebShop/src/screens/ConfirmScreen.js"],"sourcesContent":["import {\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  View,\r\n} from \"react-native\";\r\nimport React, { useRef } from \"react\";\r\nimport { Button, Input } from \"react-native-elements\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Voor- en achternaam zijn verplicht\"),\r\n  email: Yup.string()\r\n    .email(\"Geen geldig emailadres\")\r\n    .required(\"Email is verplicht\"),\r\n  street: Yup.string().required(\"Straat is verplicht\"),\r\n  houseNumber: Yup.string().required(\"Huisnummer is verplicht\"),\r\n  zipCode: Yup.number(\"Postcode kan enkel cijfer bevatten\").required(\r\n    \"Postcode is verplicht\"\r\n  ),\r\n  city: Yup.string().required(\"Gemeente is verplicht\"),\r\n});\r\n\r\nconst ConfirmScreen = () => {\r\n  const navigation = useNavigation();\r\n  // Referentie naar input\r\n  const emailRef = useRef(null);\r\n  const streetRef = useRef(null);\r\n  const houseNumberRef = useRef(null);\r\n  const zipCodeRef = useRef(null);\r\n  const cityRef = useRef(null);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      street: \"\",\r\n      houseNumber: \"\",\r\n      zipCode: \"\",\r\n      city: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n    },\r\n  });\r\n  const makeOrder = () => {};\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      keyboardVerticalOffset={200}\r\n      style={styles.container}\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n    >\r\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n        <View style={styles.inputView}>\r\n          <Input\r\n            style={styles.input}\r\n            placeholder=\"Naam\"\r\n            value={formik.values.name}\r\n            onChangeText={formik.handleChange(\"name\")}\r\n            errorMessage={formik.errors?.name}\r\n            onSubmitEditing={() => emailRef.current.focus()}\r\n            returnKeyType=\"next\"\r\n            inputContainerStyle={{\r\n              borderWidth: 0,\r\n              borderColor: \"transparent\",\r\n            }}\r\n          />\r\n          <Input\r\n            style={styles.input}\r\n            ref={emailRef}\r\n            placeholder=\"Email\"\r\n            value={formik.values.email}\r\n            onChangeText={formik.handleChange(\"email\")}\r\n            errorMessage={formik.errors?.email}\r\n            onSubmitEditing={() => streetRef.current.focus()}\r\n            returnKeyType=\"next\"\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            inputContainerStyle={{\r\n              borderWidth: 0,\r\n              borderColor: \"transparent\",\r\n            }}\r\n          />\r\n          <Input\r\n            style={styles.input}\r\n            ref={streetRef}\r\n            placeholder=\"Straat\"\r\n            value={formik.values.street}\r\n            onChangeText={formik.handleChange(\"street\")}\r\n            errorMessage={formik.errors?.street}\r\n            onSubmitEditing={() => houseNumberRef.current.focus()}\r\n            returnKeyType=\"next\"\r\n            inputContainerStyle={{\r\n              borderWidth: 0,\r\n              borderColor: \"transparent\",\r\n            }}\r\n          />\r\n          <Input\r\n            style={styles.input}\r\n            ref={houseNumberRef}\r\n            placeholder=\"Huisnummer\"\r\n            value={formik.values.houseNumber}\r\n            onChangeText={formik.handleChange(\"houseNumber\")}\r\n            errorMessage={formik.errors?.houseNumber}\r\n            onSubmitEditing={() => zipCodeRef.current.focus()}\r\n            returnKeyType=\"next\"\r\n            inputContainerStyle={{\r\n              borderWidth: 0,\r\n              borderColor: \"transparent\",\r\n            }}\r\n          />\r\n          <Input\r\n            style={styles.input}\r\n            ref={zipCodeRef}\r\n            placeholder=\"Postcode\"\r\n            value={formik.values.zipCode}\r\n            onChangeText={formik.handleChange(\"zipCode\")}\r\n            errorMessage={formik.errors?.zipCode}\r\n            onSubmitEditing={() => cityRef.current.focus()}\r\n            returnKeyType=\"next\"\r\n            keyboardType=\"number-pad\"\r\n            inputContainerStyle={{\r\n              borderWidth: 0,\r\n              borderColor: \"transparent\",\r\n            }}\r\n          />\r\n          <Input\r\n            style={styles.input}\r\n            ref={cityRef}\r\n            placeholder=\"Gemeente\"\r\n            value={formik.values.city}\r\n            onChangeText={formik.handleChange(\"city\")}\r\n            errorMessage={formik.errors?.city}\r\n            inputContainerStyle={{\r\n              borderWidth: 0,\r\n              borderColor: \"transparent\",\r\n            }}\r\n          />\r\n          <Button\r\n            buttonStyle={styles.button}\r\n            title=\"Bevestigen\"\r\n            onPress={formik.handleSubmit}\r\n          />\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nexport default ConfirmScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  inputView: {\r\n    justifyContent: \"space-around\",\r\n  },\r\n  input: {\r\n    height: 40,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    marginTop: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: \"green\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}