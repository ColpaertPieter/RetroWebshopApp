{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { reducer as cartReducer } from \"./cart/slice\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE, persistReducer, persistStore } from \"redux-persist\";\nvar persistConfig = {\n  key: \"state\",\n  version: 1,\n  storage: AsyncStorage\n};\nvar rootReducer = combineReducers({\n  cart: cartReducer\n});\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nexport var store = configureStore({\n  reducer: persistedReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    });\n  }\n});\nexport var persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","reducer","cartReducer","AsyncStorage","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","REHYDRATE","persistReducer","persistStore","persistConfig","key","version","storage","rootReducer","cart","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoreActions","persistor"],"sources":["C:/Users/Piete/Documents/Hogent/Tweedejaar/Semester2/Mobile/Projecten/RetroWebShop/store/index.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\"\r\nimport {reducer as cartReducer} from './cart/slice'\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE ,persistReducer, persistStore} from \"redux-persist\"\r\n\r\nconst persistConfig = {\r\n    key: \"state\",\r\n    version: 1,\r\n    storage: AsyncStorage\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    cart: cartReducer,\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    // Workaround non-serializable state middleware ERROR\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        }\r\n    })\r\n})\r\n\r\nexport const persistor = persistStore(store)"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,SAAQC,OAAO,IAAIC,WAAnB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,cAA5D,EAA4EC,YAA5E,QAA+F,eAA/F;AAEA,IAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,OADa;EAElBC,OAAO,EAAE,CAFS;EAGlBC,OAAO,EAAEZ;AAHS,CAAtB;AAMA,IAAMa,WAAW,GAAGhB,eAAe,CAAC;EAChCiB,IAAI,EAAEf;AAD0B,CAAD,CAAnC;AAIA,IAAMgB,gBAAgB,GAAGR,cAAc,CAACE,aAAD,EAAgBI,WAAhB,CAAvC;AAEA,OAAO,IAAMG,KAAK,GAAGpB,cAAc,CAAC;EAChCE,OAAO,EAAEiB,gBADuB;EAGhCE,UAAU,EAAE,oBAACC,oBAAD;IAAA,OAA0BA,oBAAoB,CAAC;MACvDC,iBAAiB,EAAE;QACfC,aAAa,EAAE,CAACnB,KAAD,EAAQK,SAAR,EAAmBJ,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;MADA;IADoC,CAAD,CAA9C;EAAA;AAHoB,CAAD,CAA5B;AAUP,OAAO,IAAMgB,SAAS,GAAGb,YAAY,CAACQ,KAAD,CAA9B"},"metadata":{},"sourceType":"module"}