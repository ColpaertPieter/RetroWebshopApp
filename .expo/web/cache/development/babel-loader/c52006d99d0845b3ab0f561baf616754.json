{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport TabBarNavigator from \"./TabBarNavigator\";\nimport { AuthStackNavigator } from \"./AuthStackNavigator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { setAuthenticatedFalse, setAuthenticatedTrue } from \"../../store/auth/slice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar RootNavigation = function RootNavigation() {\n  var _useSelector = useSelector(function (state) {\n    return state.session;\n  }),\n      isAuthenticated = _useSelector.isAuthenticated;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var subscription = onAuthStateChanged(auth, function (user) {\n      if (user) {\n        dispatch(setAuthenticatedTrue());\n      } else {\n        dispatch(setAuthenticatedFalse());\n      }\n    });\n    return function () {\n      return subscription();\n    };\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: isAuthenticated ? _jsx(TabBarNavigator, {}) : _jsx(AuthStackNavigator, {})\n  });\n};\n\nexport default RootNavigation;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","NavigationContainer","TabBarNavigator","AuthStackNavigator","useDispatch","useSelector","onAuthStateChanged","setAuthenticatedFalse","setAuthenticatedTrue","RootNavigation","state","session","isAuthenticated","dispatch","useEffect","subscription","auth","user","styles","StyleSheet","create"],"sources":["C:/Users/Piete/Documents/Hogent/Tweedejaar/Semester2/Mobile/Projecten/RetroWebShop/src/navigation/RootNavigation.js"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\r\nimport React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport TabBarNavigator  from \"./TabBarNavigator\";\r\nimport { AuthStackNavigator } from \"./AuthStackNavigator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport {\r\n  setAuthenticatedFalse,\r\n  setAuthenticatedTrue,\r\n} from \"../../store/auth/slice\";\r\n\r\nconst RootNavigation = () => {\r\n  const { isAuthenticated } = useSelector((state) => state.session);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const subscription = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        dispatch(setAuthenticatedTrue());\r\n      } else {\r\n        dispatch(setAuthenticatedFalse());\r\n      }\r\n    });\r\n\r\n    return () => subscription();\r\n  }, []);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      {isAuthenticated ? <TabBarNavigator /> : <AuthStackNavigator />}\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default RootNavigation;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP;AACA,SAASC,kBAAT;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SACEC,qBADF,EAEEC,oBAFF;;;AAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;EAC3B,mBAA4BJ,WAAW,CAAC,UAACK,KAAD;IAAA,OAAWA,KAAK,CAACC,OAAjB;EAAA,CAAD,CAAvC;EAAA,IAAQC,eAAR,gBAAQA,eAAR;;EACA,IAAMC,QAAQ,GAAGT,WAAW,EAA5B;EAEAU,SAAS,CAAC,YAAM;IACd,IAAMC,YAAY,GAAGT,kBAAkB,CAACU,IAAD,EAAO,UAACC,IAAD,EAAU;MACtD,IAAIA,IAAJ,EAAU;QACRJ,QAAQ,CAACL,oBAAoB,EAArB,CAAR;MACD,CAFD,MAEO;QACLK,QAAQ,CAACN,qBAAqB,EAAtB,CAAR;MACD;IACF,CANsC,CAAvC;IAQA,OAAO;MAAA,OAAMQ,YAAY,EAAlB;IAAA,CAAP;EACD,CAVQ,EAUN,EAVM,CAAT;EAYA,OACE,KAAC,mBAAD;IAAA,UACGH,eAAe,GAAG,KAAC,eAAD,KAAH,GAAyB,KAAC,kBAAD;EAD3C,EADF;AAKD,CArBD;;AAuBA,eAAeH,cAAf;AAEA,IAAMS,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf"},"metadata":{},"sourceType":"module"}